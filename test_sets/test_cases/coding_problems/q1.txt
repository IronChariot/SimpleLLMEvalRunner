```python
import numpy as np

def matrix_multiply(A, B):
    return np.dot(A, B)

def matrix_exponentiation(matrix, power):
    result = np.identity(len(matrix))
    base = matrix

    while power > 0:
        if power % 2 == 1:
            result = matrix_multiply(result, base)
        base = matrix_multiply(base, base)
        power /= 2

    return result

def get_fibonacci(n):
    if n < 0:
        raise ValueError("Fibonacci number cannot be negative")
    elif n == 0:
        return 0
    elif n == 1:
        return 1

    F = np.array([[1, 1],
                  [1, 0]], dtype=np.int64)
    
    result_matrix = matrix_exponentiation(F, n-1)
    return result_matrix[0][0]

def generate_fibonacci_series(length):
    series = []
    for i in range(length):
        series.append(get_fibonacci(i))
    return series

# Example usage:
length_of_series = 10
fibonacci_series = generate_fibonacci_series(length_of_series)
print(fibonacci_series)
```

The above code is supposed to generate fibonacci sequences, but it doesn't work. What's wrong with it?